caster-api:

  # Docker image release version
  image:
    # Caster API version
    tag: "3.4.1"
  
  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: $DOMAIN
        paths:
          - path: /caster/(api|swagger|hubs)
            pathType: ImplementationSpecific
    tls:
      - secretName: appliance-cert
        hosts:
         - $DOMAIN

  # Use a .terraformrc file to overwrite standard Terraform configuration
  # https://www.terraform.io/docs/cli/config/config-file.html
  # NOTE:  If enabled,  Terraform__PluginDirectory environment variable must be set to empty explicitly
  terraformrc:
    enabled: true
    value: |
      plugin_cache_dir = "/terraform/plugin-cache"

  # storage - either an existing pvc, the size for a new pvc, or emptyDir
  storage:
    existing: ""
    size: "2Gi"
    mode: ReadWriteOnce
    class: longhorn

  # If this deployment needs to trust non-public certificates,
  # create a configMap with the needed certifcates and specify
  # the configMap name here
  certificateMap: "appliance-root-ca"

  # Gets placed in /root/.git-credentials to allow immediate Gitlab access via access token
  # Replace TOKEN with an access token created in Gitlab, and update the Gitlab URL
  gitcredentials: 'https://git-access-token:wMa2RPQP_ZR3fxc5zQtv@gitlab-webservice-default:8080/'

  # Config app settings with environment vars.
  # Those most likely needing values are listed. For others,
  # see https://github.com/cmu-sei/crucible/blob/master/caster.api/src/Caster.Api/appsettings.json
  env:
    # Proxy Settings
    # http_proxy: proxy.example.com:9000
    # https_proxy: proxy.example.com:9000
    # HTTP_PROXY: proxy.example.com:9000
    # HTTPS_PROXY: proxy.example.com:9000
    # NO_PROXY: .local
    # no_proxy: .local

    ## If hosting in virtual directory, specify path base
    PathBase: "/caster"

    Logging__LogLevel__Default: "$CRUCIBLE_LOG_LEVEL"
    Logging__LogLevel__System: "$CRUCIBLE_LOG_LEVEL"
    Logging__LogLevel__Microsoft: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__Default: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__System: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__Microsoft: "$CRUCIBLE_LOG_LEVEL"

    # This deployment comes built in with a script to install Terraform and the necessary
    # plugins to run Caster properly.  Internet access is required for this script to run properly.
    # It's recommended that this should remain false.  Please see the file "terraform-installation.tpl"
    # for more information on the installation process.
    SKIP_TERRAFORM_INSTALLATION: false

    # VSphere settings:
    # TODO - Document VSphere user role requirements
    VSPHERE_SERVER: $VSPHERE_SERVER
    VSPHERE_USER: $CRUCIBLE_SVC_ACCOUNT
    VSPHERE_PASSWORD: $CRUCIBLE_SVC_ACCOUNT_PASSWD
    VSPHERE_ALLOW_UNVERIFIED_SSL: true

    # === Terraform Crucible Provider Section ===
    # These variables only need filled in if you are using the following provider:
    # https://registry.terraform.io/providers/cmu-sei/crucible/latest

    # An Identity Service account with Caster Admin privileges
    SEI_CRUCIBLE_USERNAME: 'crucible-admin@$DOMAIN'
    SEI_CRUCIBLE_PASSWORD: '$CRUCIBLE_ADMIN_PASS'

    # URL to the Identity Server Auth endpoint
    SEI_CRUCIBLE_AUTH_URL: https://$DOMAIN/identity/connect/authorize
    # URL to the Identity Server Token endpoint
    SEI_CRUCIBLE_TOK_URL: https://$DOMAIN/identity/connect/token

    # Identity Client information
    SEI_CRUCIBLE_CLIENT_ID: player-api
    SEI_CRUCIBLE_CLIENT_SECRET: '578bca574cad40ea9d84e44c12426a6c'

    # URLs to Player API and VM API
    SEI_CRUCIBLE_VM_API_URL: https://$DOMAIN/vm/api/
    SEI_CRUCIBLE_PLAYER_API_URL: https://$DOMAIN/player/api

    # === End Terraform Crucible Provider Section ===

    # === Terraform Identity Provider Section ===
    # These variables only need filled in if you are using the following provider:
    # https://registry.terraform.io/providers/cmu-sei/identity/latest

    # URL to the Identity Server Auth endpoint
    SEI_IDENTITY_TOK_URL: https://$DOMAIN/identity/connect/token
    # URL to the Identity Server API endpoint
    SEI_IDENTITY_API_URL: https://$DOMAIN/identity/api/
    
    # Identity Client information
    SEI_IDENTITY_CLIENT_ID: caster-admin  
    SEI_IDENTITY_CLIENT_SECRET: '26fa08a2f77a4ad6ac2b40a9ffe4a735'

    # === End Terraform Identity Provider Section ===

    # === Terraform Azure Provider Section ===
    # These variables only need filled in if you are using the following provider:
    # https://registry.terraform.io/providers/hashicorp/azurerm/latest

    # Remaining documentation provided by the plugin
    # NOTE:  Use the certificateMap key in this chart to add certificates, which will be placed in:
    #        /usr/local/share/ca-certificates
    ARM_CLIENT_CERTIFICATE_PATH: ''
    ARM_CLIENT_ID: ''
    ARM_ENVIRONMENT: ''
    ARM_SKIP_PROVIDER_REGISTRATION: ''
    ARM_SUBSCRIPTION_ID: ''
    ARM_TENANT_ID: ''

    # See here for more information regarding AllowedHosts
    # https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hostfiltering.hostfilteringoptions.allowedhosts?view=aspnetcore-3.1
    AllowedHosts: "*"

    # CORS policy settings.
    # The first entry should be the URL to Caster
    CorsPolicy__Origins__0: "https://$DOMAIN"
    CorsPolicy__AllowAnyMethod: true
    CorsPolicy__AllowAnyHeader: true

    # Connection String to database
    # database requires the 'uuid-ossp' extension installed
    ConnectionStrings__PostgreSQL: "Server=postgresql;Port=5432;Database=caster_api;Username=postgres;Password=$POSTGRES_PASS;"

    # OAuth2 Identity Client for Application
    Authorization__Authority: https://$DOMAIN/identity
    Authorization__AuthorizationUrl: https://$DOMAIN/identity/connect/authorize
    Authorization__TokenUrl: https://$DOMAIN/identity/connect/token
    Authorization__AuthorizationScope: "caster-api"
    Authorization__ClientId: caster-api-dev

    # OAuth2 Identity Client /w Password
    Client__TokenUrl: https://$DOMAIN/identity/connect/token
    Client__ClientId: caster-admin
    Client__UserName: crucible-admin@$DOMAIN
    Client__Password: $CRUCIBLE_ADMIN_PASS
    Client__Scope: "player-api vm-api"

    # Crucible Player URLs
    Player__VmApiUrl: "https://$DOMAIN/vm/api"
    Player__VmConsoleUrl: "https://$DOMAIN/console/vm/{id}/console"

    # Terraform Information
    # - DefaultVersion - The default version to be used.
    # - GitlabApiUrl - URL to the deployed Gitlab instance
    # - TODO - Add link to Installation Documentation on how to get GItlabTaken and GitlabGroupId
    Terraform__BinaryPath: /terraform/binaries
    Terraform__RootWorkingDirectory: /terraform/root
    Terraform__PluginCache: /terraform/plugin-cache
    Terraform__DefaultVersion: "0.14.0"
    Terraform__GitlabApiUrl: "http://gitlab-webservice-default:8080/api/v4/"
    Terraform__GitlabToken: "wMa2RPQP_ZR3fxc5zQtv"
    Terraform__GitlabGroupId: 4

    # Configurable save lengths for Caster untagged versions
    FileVersions__DaysToSaveAllUntaggedVersions: 7
    FileVersions__DaysToSaveDailyUntaggedVersions: 31

    # Basic seed data to jumpstart deployement
    # TODO - Document seed data
    SeedData__Users__0__id: "dee684c5-2eaf-401a-915b-d3d4320fe5d5"
    SeedData__Users__0__name:  "administrator@$DOMAIN"
    SeedData__Users__1__id:  "32c11441-7eec-47eb-a915-607c4f2529f4"
    SeedData__Users__1__name:  "crucible-admin@$DOMAIN"
    SeedData__UserPermissions__0__UserId:  "dee684c5-2eaf-401a-915b-d3d4320fe5d5"
    SeedData__UserPermissions__0__PermissionId:  "00000000-0000-0000-0000-000000000001"
    SeedData__UserPermissions__1__UserId:  "32c11441-7eec-47eb-a915-607c4f2529f4"
    SeedData__UserPermissions__1__PermissionId:  "00000000-0000-0000-0000-000000000001"


caster-ui:

  # Docker image release version
  image:
    tag: "3.4.0"

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: $DOMAIN
        paths:
          - path: "/caster(/|$)(.*)"
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
         - $DOMAIN

  env: 
    ## basehref is path to the app
    APP_BASEHREF: "/caster"

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client
  settings: |-
    {
      "ApiUrl": "https://$DOMAIN/caster",
      "OIDCSettings": {
        "authority": "https://$DOMAIN/identity/",
        "client_id": "caster-ui",
        "redirect_uri": "https://$DOMAIN/caster/auth-callback",
        "post_logout_redirect_uri": "https://$DOMAIN/caster",
        "response_type": "code",
        "scope": "openid profile email caster-api",
        "automaticSilentRenew": true,
        "silent_redirect_uri": "https://$DOMAIN/caster/auth-callback-silent"
      },
      "UseLocalAuthStorage": true,
      "AppTopBarHexColor": "#E9831C",
      "AppTopBarHexTextColor": "#FFFFFF",
      "AppTopBarText": "Caster",
      "Hotkeys": {
        "PROJECT_NEW": {
          "keys": "meta.p",
          "group": "",
          "description": "New Project"
        },
        "ENTER": {
          "keys": "enter",
          "group": "Global",
          "description": "Default 'confirm'",
          "allowIn": ["INPUT"]
        },
        "ESCAPE": {
          "keys": "escape",
          "group": "Global",
          "description": "Default 'cancel'",
          "allowIn": ["INPUT", "TEXTAREA"]
        },
        "FILE_LOCK_TOGGLE": {
          "keys": "control.l",
          "group": "Editor",
          "description": "Unlock / Lock a file",
          "allowIn": ["INPUT", "TEXTAREA"]
        },
        "FILE_SAVE": {
          "keys": "control.s",
          "group": "Editor",
          "description": "Save a file",
          "allowIn": ["INPUT", "TEXTAREA"]
        }
      }
    }
